[2mdiff --git a/m/reader.go b/m/reader.go[0m
[2mindex 0cec7f2..7091f6a 100644[0m
[1m--- [22m[2ma/[0mm/[1mreader.go[0m
[1m+++ [22m[2mb/[0mm/[1mreader.go[0m
[36m@@ -146,11 +146,19 @@ [1mfunc readStream(stream io.Reader, reader *Reader, fromFilter *exec.Cmd) {[0m
 }

 // NewReaderFromStream creates a new stream reader
[31m-[0mfunc NewReaderFromStream(name [7m[31m*[0mstring, reader io.Reader) *Reader {
[32m+//[0m
[32m+// The name can be an empty string ("").[0m
[32m+//[0m
[32m+// If non-empty, the name will be displayed by the pager in the bottom left[0m
[32m+// corner to help the user keep track of what is being paged.[0m
[32m+[0mfunc NewReaderFromStream(name string, reader io.Reader) *Reader {
    mReader := newReaderFromStream(reader, nil)
[31m-[0m   mReader.lock.Lock()
[31m-   [0mmReader.name = name
[31m-   [0mmReader.lock.Unlock()
[32m+[0m
[32m+[0m   [32mif len(name) > 0 {[0m
[32m+       [0mmReader.lock.Lock()
[32m+       [0mmReader.name = [7m[32m&[0mname
[32m+       [0mmReader.lock.Unlock()
[32m+   }[0m

    return mReader
 }
[36m@@ -342,7 +350,7 @@ [1mfunc NewReaderFromFilename(filename string) (*Reader, error) {[0m
        return nil, err
    }

[31m-[0m   reader := NewReaderFromStream([7m[31m&[0mfilename, stream)
[32m+[0m   reader := NewReaderFromStream(filename, stream)
    return reader, nil
 }

